<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEANCsQAAEABAB0BgAAFgAAACgAAAA0AAAAVgAAAAEABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACoAAAA3AAARXUAXV1dAD099wAAfrkAALHlAADl9wBt9/cA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAA3N3NwMAAAAAAAAAAAAAAAADdnd3cwdzd2d3Z3cIiId2MAAAAAAAAAAA
        iAAABoiIhzF3iZiIiIh3cDM4d2MAAAAAAAAAAAgIoABjeIMSiIiIiIiIiIcRMIdwAAAAAAAAAAAIqoAA
        ADMzUoiIg3iIiIiIIREHdzdzcAAAAAAACoCIAAA3c1eIiImYiIhwB4IXc3cwAAAAAAAAAAAAAAAAAwOI
        cGeIiIiIBACId3N3N3cwAAAAAAAAAAAAAAADiAQGiIiIiACgiIdzd3d3cwAAAAAAAAAAAAAAADgAoIiI
        iIhwB4iHc3d3d3YAAAAAAAiIAACAAABocAeIiIiIiIiIh3N3d3d3AAAAAACKqoCIAAAAA4iIiIiIiIiI
        iIc3d3iIdwAAAAgIqAiogAAAAAOIiIiIiIiIiIiHOHeIiHYAAAAAiIAAiAAAAAAGiIiJmZiIiIiIdziH
        iIhwAAAAAAgAAIAAAAAAAAiImZmZmIiIiHOHiIiIcAAAAAAAAAAAAAAAAAAHiJmZmZiIiIh3CIiIhwAA
        AAAAAAAAAAAAAHd3d3iZmZmYiIiIh3M3iIcAAAAAAAAACQAAAASIiId3iJmZiIiHaIh3OIhwAAAAAAAA
        CoAABEREiZiIdmiIiIiHMziIh3OHAAAAAAAAAAgAAAAEREiIhgAGZ3d2ZmY2iYhzhwAAAAAAAAAAAAAA
        AAAGZmAAA3iGZmaIhoiYdzMAAAAAAAAAAAAAAAAAAAAAAAA3iJmZiGNoiIdwAAAAAAAAAAAAAAAAAAAA
        AAAABjd3d2Z4ZoiEAAAAAAAAAAAAAAAAAAAAAAAAAAAGM4mZiIcIhEAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABmMwAABwREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHdwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAd3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHd3eDAAAAAAAAAAAA
        AAAAAAAAAAAAADcwAAB3d3eAMAAAAAAAAAAAAAAAAAAAAAAAAAA3cDAAd3eIMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAN3dwMAd3AAAAAAAAAAAAAAAAAAAAAAAAAAAAA3d3d3AHdwAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAN3d3d3d3iAAAAAAAAAAAAAAAAAAAAAAAAAAAADd3d3d4iIiQAAAAAAAAAAAAAAAAAAAAAAAAAAA4iI
        iIiImZYAAAAAAAAAAAAAAAAAAAAAAAAAAAOZmZmZZmZgAAAAAAAAAAAAAAAAAAAAAAAAAAAHZmZmd3AA
        AAAAAAAAAAAAAP////////AA/////4D/8AD/8AAAAD/wAP/gAAAAH/AA8+AAAAAP8AD6cAAAAAAwAPh8
        AAAAADAA+TwAAAAAcAD//gAAAAAwAP//gAAAADAA///AAAAAEAD498AAAAAQAPBP4AAAABAAoh/gAAAA
        EADHP+AAAAAwAO9/8AAAADAA//8AAAAAcAD/+AAAAABwAP7gAAAAAPAA+YAAAAAB8AD7wAGAAAHwAP/4
        B4AAA/AA////wAAD8AD////gAAHwAP////gAAfAA/////wCA8AD/////8eDwAP/////j/PAA/////8D/
        8AD/////4H/wAP/////4P/AA//////wf8AD/////4B/wAP///78AP/AA////HgB/8AD///8GAf/wAP//
        /wED//AA///+AAf/8AD///4AA//wAP///gAB//AA///+AAP/8AD///4AB//wAP///gB///AA
</value>
  </data>
</root>